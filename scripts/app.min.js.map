{"version":3,"sources":["node_modules/browser-pack/_prelude.js","scripts/app.js","scripts/constants.js","scripts/setColors.js","scripts/setSound.js"],"names":["downEvent","e","mousedown","oscillator","context","createOscillator","gain","_setSound","calculateSoundGain","clientY","lightValue","_setColors","calculateLightValue","frequencyPercentage","findFrequencyPercentage","frequency","value","setTargetAtTime","calculateFrequency","clientX","currentTime","connect","gainNode","destination","start","setColors","upEvent","stop","disconnect","moveEvent","require","AudioContext","createGain","document","body","addEventListener","FREQ","exports","min","max","GAIN","COLOR_RANGE","hue","light","setBackgroundColor","setHeadingColor","mouseYPosition","window","innerHeight","_constants","freq","freqRange","huePercent","lightPercent","Math","round","backgroundColor","style","heading","getElementById","hueOpposite","lightOpposite","headingColor","color","expInterpolate","n","exp","log","mouseXPosition","innerWidth"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import { \n    calculateFrequency, \n    calculateSoundGain \n} from \"./setSound\";\n\nimport { \n    setColors,\n    findFrequencyPercentage,\n    calculateLightValue \n} from \"./setColors\";\n\nvar context = new AudioContext(),\n    mousedown = false,\n    oscillator = null,\n    gainNode = context.createGain();\n\ndocument.body.addEventListener(\"mousedown\", downEvent);\ndocument.body.addEventListener(\"mouseup\", upEvent);\ndocument.body.addEventListener(\"mousemove\", moveEvent);\n\nfunction downEvent(e) {\n    mousedown = true;\n    oscillator = context.createOscillator();\n\n    var gain = calculateSoundGain(e.clientY),\n        lightValue = calculateLightValue(e.clientY),   \n        frequencyPercentage = findFrequencyPercentage(oscillator.frequency.value); \n    \n    \n    oscillator.frequency.setTargetAtTime(calculateFrequency(e.clientX), context.currentTime, 0.01);\n    oscillator.connect(gainNode);\n    \n    gainNode.connect(context.destination);\n    gainNode.gain.setTargetAtTime(gain, context.currentTime, 0.01);\n    \n    oscillator.start(context.currentTime);\n    \n    setColors(frequencyPercentage, lightValue);   \n}\n\nfunction upEvent() {\n    if(oscillator) {\n        mousedown = false;\n        oscillator.stop(context.currentTime);\n        oscillator.disconnect();\n    } \n}\n\nfunction moveEvent(e) {\n    if(mousedown) {\n        var gain = calculateSoundGain(e.clientY),\n            lightValue = calculateLightValue(e.clientY),\n            frequencyPercentage = findFrequencyPercentage(oscillator.frequency.value);    \n        \n        oscillator.frequency.setTargetAtTime(calculateFrequency(e.clientX), context.currentTime, 0.01);\n        \n        gainNode.gain.setTargetAtTime(gain, context.currentTime, 0.01); \n        \n        setColors(frequencyPercentage, lightValue);           \n    }\n}","export const FREQ = {\n    min: 60, \n    max: 2000\n};\n\nexport const GAIN = {\n    min: 0.01,\n    max: 1\n};\n\nexport const COLOR_RANGE = 360;","import { FREQ, GAIN, COLOR_RANGE } from \"./constants\";\n\n\nexport function setColors(hue, light) {\n    setBackgroundColor(hue, light);\n    setHeadingColor(hue, light);\n}\n\nexport function calculateLightValue(mouseYPosition) {\n    return 1 - ((mouseYPosition / window.innerHeight) * GAIN.max);\n}\n\nexport function findFrequencyPercentage(freq) {\n    var freqRange = FREQ.max - FREQ.min;\n    return (freq / freqRange);\n}\n\n\nfunction setBackgroundColor(huePercent, lightPercent) {\n    var hue = Math.min(360, Math.round(COLOR_RANGE * huePercent)), \n        light = (70 * lightPercent) + 10, \n        backgroundColor = \"hsla(\" + hue + \", 50%, \" + light + \"%, 1)\";\n    \n    document.body.style.backgroundColor = backgroundColor;\n}\n\nfunction setHeadingColor(huePercent, lightPercent) {\n    var heading = document.getElementById(\"heading\"),\n        hue = Math.min(360, Math.round(COLOR_RANGE * huePercent)),\n        hueOpposite = (hue + 180) % 360,\n        lightOpposite = (70 * lightPercent) + 10,\n        headingColor = \"hsla(\" + hueOpposite + \", 50%, \" + lightOpposite + \"%, 1)\";\n\n    if(lightPercent < 0.50) {\n        heading.style.backgroundColor = \"hsla(0, 100%, 100%, 0.75)\";\n    } else {\n        heading.style.backgroundColor = \"hsla(0, 0%, 0%, 0.75)\";\n    }\n\n    heading.style.color = headingColor;\n}\n\n","import { FREQ, GAIN } from \"./constants\";\n\nfunction expInterpolate(n, min, max) {\n    return Math.exp(n * Math.log(max / min)) * min;\n}\n\nexport function calculateFrequency(mouseXPosition) {\n    return expInterpolate(mouseXPosition / window.innerWidth, FREQ.min, FREQ.max);\n}\n\nexport function calculateSoundGain(mouseYPosition) {\n    return expInterpolate(1 - (mouseYPosition / window.innerHeight), GAIN.min, GAIN.max);\n}"]}